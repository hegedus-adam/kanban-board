version: 2.1

jobs:
  lint:
    docker:
      - image: cimg/node:15.1
    parameters:
      work_dir:
        description: Service path
        type: string
    steps:
      - checkout
      - restore_cache:
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - node-deps-v1-{{ .Branch }}-{{checksum "<< parameters.work_dir >>/pnpm-lock.yaml"}}
      - run:
          name: install pnpm
          working_directory: << parameters.work_dir >>
          command: sudo npm i -g pnpm
      - run:
          name: Install packages
          working_directory: << parameters.work_dir >>
          command: pnpm i --prefer-frozen-lockfile
      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{checksum "<< parameters.work_dir >>/pnpm-lock.yaml"}}
          paths:
            - ~/.pnpm
      - run:
          name: Lint javascript
          working_directory: << parameters.work_dir >>
          command: pnpm lint

  test:
    docker:
      - image: cimg/node:15.1
    parameters:
      work_dir:
        description: Service path
        type: string
    steps:
      - checkout
      - restore_cache:
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - node-deps-v1-{{ .Branch }}-{{checksum "<< parameters.work_dir >>/pnpm-lock.yaml"}}
      - run:
          name: install pnpm
          working_directory: << parameters.work_dir >>
          command: sudo npm i -g pnpm
      - run:
          name: Install packages
          working_directory: << parameters.work_dir >>
          command: pnpm i --prefer-frozen-lockfile
      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{checksum "<< parameters.work_dir >>/pnpm-lock.yaml"}}
          paths:
            - ~/.pnpm
      - run:
          name: Unit test
          working_directory: << parameters.work_dir >>
          command: pnpm test:ci
      - store_artifacts:
          path: << parameters.work_dir >>/coverage/
      - store_test_results:
          path: << parameters.work_dir >>/junit.xml

workflows:
  identity:
    jobs:
      - lint:
          work_dir: identity
      - test:
          work_dir: identity
